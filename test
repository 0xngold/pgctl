#!/bin/bash
set -eu
export TOP=$(dirname $(readlink -f $0))
export PROJECT=pgctl
export COVERAGE_PROCESS_START=$TOP/.coveragerc

combine() {
    unset COVERAGE_PROCESS_START
    coverage combine --rcfile=$TOP/.coveragerc
}
fail() {
    combine
    echo '[31;1mFAIL[m'
}
trap fail ERR

# the travis default umask is 002, but ubuntu's is 022
umask 022

set -x
# See: https://bitbucket.org/ned/coveragepy/issue/340/keyerror-subpy
if [ -n "$VIRTUAL_ENV" -a -d $VIRTUAL_ENV/local ]; then
    rm -rf $VIRTUAL_ENV/local
    find $VIRTUAL_ENV -name '*.pyc' -print0 | xargs -0r rm
    find $VIRTUAL_ENV -name '__pycache__' -print0 | xargs -0r rmdir
fi

# clean out any leftover coverage data
rm -f $TOP/.coverage.* $TOP/.coverage
# we actually do want to get coverage for our test-infra scripts:

# See: http://nedbatchelder.com/code/coverage/subprocess.html
$TOP/tests/testing/install_coverage_pth.py

# default arguments
if [ -z "$*" ]; then
    NCPU=$(getconf _NPROCESSORS_CONF)
    n=$((NCPU < 5 ? NCPU * 2 : 10))
    set -- -n $n $TOP/tests $($TOP/tests/testing/get_modulefile.py $PROJECT)
fi
py.test "$@"
combine

## TODO: figure out a nice way to disable coverage/lint when running a single test
pre-commit run --all-files

coverage html --rcfile=$TOP/.coveragerc
coverage report --rcfile=$TOP/.coveragerc --fail-under 100
